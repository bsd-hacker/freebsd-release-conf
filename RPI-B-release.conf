#!/bin/sh
#
# $FreeBSD$
#

CHROOTDIR=${CHROOTDIR:-"/releng/`basename ${JOB_NAME} | sed -e 's#,#/#g'`"}
#RELENGDIR=""
#VCSCMD=""
VCSCMD="git"
#SVNROOT="http://svn.freebsd.org/"
SVNROOT=""
SRCBRANCH="-b shigeru_work https://github.com/bsd-hacker/freebsd.git"
#DOCBRANCH=""
#DOCBRANCH="https://svn.FreeBSD.org/doc/head@rHEAD"
DOCBRANCH="https://github.com/bsd-hacker/freebsd-doc.git"
#PORTBRANCH=""
#PORTBRANCH="https://svn.FreeBSD.org/ports/head@rHEAD"
PORTBRANCH="-b shigeru_work https://github.com/bsd-hacker/freebsd-ports.git"
BRANCH_OVERRIDE="CURRENT-`date +%Y%m%d`"

case ${VCSCMD} in
git)
	SNAPSHOT="-`date +%Y%m%d`-`git rev-parse HEAD`"
	;;

*)
	SNAPSHOT="-`date +%Y%m%d`-`svnlite info ${CHROOTDIR}/usr/src/. | grep '^Revision: ' | awk '{ print $2 }'`"
	;;
esac

if [ "X${VIMAGE}" != "XYES" ]; then
	TARGET_VIMAGE=""
else
	TARGET_VIMAGE="-VIMAGE"
fi

if [ "X${WITNESS}" != "XYES" ]; then
	TARGET_WITNESS=""
else
	TARGET_WITNESS="-WITNESS"
fi

EMBEDDEDBUILD=1
EMBEDDED_TARGET="arm"
EMBEDDED_TARGET_ARCH="armv6"
EMBEDDEDPORTS="sysutils/u-boot-rpi"
KERNEL="${TARGET_CONF}${TARGET_VIMAGE}${TARGET_WITNESS}"
WORLD_FLAGS="${WORLD_FLAGS} UBLDR_LOADADDR=0x2000000"
IMAGE_SIZE="2G"
PART_SCHEME="MBR"
FAT_SIZE="50m"
FAT_TYPE="16"
MD_ARGS="-x 63 -y 255"
NODOC=1

arm_install_uboot() {
	UBOOT_DIR="/usr/local/share/u-boot/u-boot-rpi"
	UBOOT_FILES="bootcode.bin config.txt fixup.dat fixup_cd.dat \
		start.elf start_cd.elf u-boot.img"
	FATMOUNT="${DESTDIR%${KERNEL}}/fat"
	UFSMOUNT="${DESTDIR%${KERNEL}}/ufs"
	chroot ${CHROOTDIR} mkdir -p "${FATMOUNT}" "${UFSMOUNT}"
	chroot ${CHROOTDIR} mount_msdosfs /dev/${mddev}s1 ${FATMOUNT}
	chroot ${CHROOTDIR} mount /dev/${mddev}s2a ${UFSMOUNT}
	for _UF in ${UBOOT_FILES}; do
		chroot ${CHROOTDIR} cp -p ${UBOOT_DIR}/${_UF} \
			${FATMOUNT}/${_UF}
	done
	chroot ${CHROOTDIR} cp -p ${UFSMOUNT}/boot/ubldr ${FATMOUNT}/ubldr
	chroot ${CHROOTDIR} cp -p ${UFSMOUNT}/boot/ubldr.bin \
		${FATMOUNT}/ubldr.bin
	chroot ${CHROOTDIR} cp -p ${UFSMOUNT}/boot/dtb/rpi.dtb \
		${FATMOUNT}/rpi.dtb
	chroot ${CHROOTDIR} touch ${UFSMOUNT}/firstboot
	sync
	umount_loop ${CHROOTDIR}/${FATMOUNT}
	umount_loop ${CHROOTDIR}/${UFSMOUNT}
	chroot ${CHROOTDIR} rmdir ${FATMOUNT}
	chroot ${CHROOTDIR} rmdir ${UFSMOUNT}
	
	return 0
}
